# This manifest configures the application deployment, for more information, visit the wiki:
# https://wiki.swissre.com/display/Stratum/Application+Manifest
apiVersion: deployment.stratum.swissre.com/v1alpha1
kind: ApplicationDeployment
metadata:
  name: "{{ .APMID }}-{{ .Stage }}-{{ .Component }}"
spec:
  # define where you application binaries are located.
  applicationImage: "{{ .Registry }}/{{ .APMID }}/goheader{{ if .Tag }}:{{ .Tag }}{{ end }}{{ if .Digest }}@{{ .Digest }}{{ end }}"

  # swiss re application specific information
  swissre:
    apmid: "{{ .APMID }}"
    stage: "{{ .Stage }}"
    component: "{{ .Component }}"

  # define the number of instances deployed (here default is `2` unless an env var `INSTANCES` declares differently
  instances: {{ or .Env.INSTANCES 2 }}

  # define the resource requirements
  resources:
    requests: # minimum (ensured)
      memory: "128Mi"
      cpu: "50m"
    limits: # maximum (allowed)
      memory: "1024Mi"
      cpu: "200m"
    # define special hardware profile
    # optional
    #profile: mem

  # define the health check and readiness endpoints
  # optional
  healthCheck:
    livenessProbe:
      path: ":8000/"
    readinessProbe:
      path: ":8000/"

  # defines the HTTP port your app is listening on
  port: 8000

  # define the context root of your app
  # only supports one level
  path: /goheader

  # define application access properties
  # optional, if no gateway present app will be accessible within namespace only.
  gateway:
    accessPolicy: non-identity
    publicAccessAllowed: true

  # define environment variables that are passed to the app containers
  # optional
  env:
    # TZ: Europe/Zurich
    # USE_IN_MEMORY: true
    - name: TEST_ENV_1
      value: test-value
    # - name: TEST_ENV_2
    #   secretRef: test-secret
    # - name: TEST_ENV_3
    #   certificateKeyRef: test-secret
    # - name: TEST_ENV_4
    #   certificateCrtRef: test-certificate

  # define command line arguments that are passed to the app containers
  # optional
  args:
    # - myvalues # literal values
    # - $(TEST_ENV_1) # will be replaced by resp. environment value

  # define key vault csi secret store integration
  # optional
  # keyvault:
  #   # optional
  #   secrets:
  #     # secret name in the key vault
  #   - test-secret
  #   # optional
  #   certificates:
  #     # certificate name in the key vault
  #   - name: test-certificate
  #     format: pem # (optional) will default to pem

  # define the readonly root filesystem security context
  # optional
  # securityContext:
  #   readOnlyRootFilesystem: false

  # define egress traffic allowing rules
  # optional
  egress:
    # - matchPattern: "dsp*.postgres.database.azure.com"

  # define storage either dedicated to a single POD instance or shared amongst all POD instances
  # optional
  storage:
    # - mountPath: /mnt/tmp
    #   mode: dedicated # each POD instance has one, this is the default when `mode` in not specified
    #   size: 10Gi
    #   sku: standard # or `premium`, but be aware that apart from a better performance the minimum allocation of a premium storage is 100Gi
    # - mountPath: /mnt/shrd
    #   size: 10Gi
    #   mode: shared # all POD instances have shared access to this one

